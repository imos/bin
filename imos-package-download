#!/bin/bash
# imos-package-download downloads a file from imos-package.
#
# Usage:
#   imos-package-download [options] file...

source "$(dirname "${BASH_SOURCE}")"/imos-variables || exit 1
DEFINE_string bucket 'imos-package' 'Bucket name.'
DEFINE_string host 's3-ap-northeast-1.amazonaws.com' 'Host name.'
DEFINE_int threads 64 'The number of threads to upload with.'
DEFINE_string fragments_directory '/var/tmp/fragments' 'Cache directory.'
DEFINE_string output '' 'Output path.'
if ! sub::isset IMOSH_TESTING; then
  eval "${IMOSH_INIT}"
fi

download() {
  if [ "$#" -eq 1 ]; then
    local destination="${TMPDIR}/${1}"
    sub::println "${destination}"
    local cache=''
    if [ "${FLAGS_fragments_directory}" != '' ]; then
      mkdir -m 0777 -p "${FLAGS_fragments_directory}"
      cache="${FLAGS_fragments_directory}/${1}"
    fi
    if [ "${cache}" != '' -a -f "${cache}" ]; then
      cat "${cache}" >"${destination}"
    fi
    if [ -f "${destination}" ] && \
       [ "$(cat "${destination}" | stream::md5)" = "${1}" ]; then
      LOG INFO "${1} was loaded from cache."
      return
    fi
    LOG INFO "Downloading ${1}..."
    curl --silent --fail --output "${destination}.tmp" \
        "https://${FLAGS_host}/${FLAGS_bucket}/ephemeral/${1}" || \
        curl --silent --fail --output "${destination}.tmp" \
        "https://${FLAGS_host}/${FLAGS_bucket}/permanent/${1}" || \
        LOG FATAL "Failed to find ${1}."
    mv -f "${destination}.tmp" "${destination}"
    if [ "$(cat "${destination}" | stream::md5)" != "${1}" ]; then
      LOG FATAL "Fragment ${1} is broken."
    fi
    if [ "${cache}" != '' ]; then
      cat "${destination}" >"${cache}"
    fi
  else
    eval "${IMOSH_WRONG_NUMBER_OF_ARGUMENTS}"
  fi
}

main() {
  if [ "$#" -eq 1 ]; then
    local list_file="$(download "${1}")"
    local output_file=''
    local fragment=''
    func::tmpfile output_file
    LOG INFO "List file: ${list_file}"
    while IFS= read -r fragment; do
      LOG INFO "Fragment: ${fragment}"
      if sub::greg_match '+([0-9a-f])' "${fragment}"; then
        cat "$(download "${fragment}")" >>"${output_file}"
      fi
    done <"${list_file}"
    if [ "${FLAGS_output}" != '' ]; then
      mv -f "${output_file}" "${FLAGS_output}"
    fi
  else
    eval "${IMOSH_WRONG_NUMBER_OF_ARGUMENTS}"
  fi
}

if ! sub::isset IMOSH_TESTING; then
  main "$@"
fi
